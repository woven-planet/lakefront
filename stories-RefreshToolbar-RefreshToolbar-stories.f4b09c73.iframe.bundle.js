(self.webpackChunk_woven_planet_lakefront=self.webpackChunk_woven_planet_lakefront||[]).push([[8362],{"./node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./.storybook/DocBlock.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const DocBlock=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.fQ,{includePrimary:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.Ed,{})]}),__WEBPACK_DEFAULT_EXPORT__=DocBlock;DocBlock.__docgenInfo={description:"",methods:[],displayName:"DocBlock"}},"./src/stories/RefreshToolbar/RefreshToolbar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RefreshToolbar:()=>RefreshToolbar,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),src_components_RefreshToolbar__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/RefreshToolbar/index.ts"),src_components_Button_Button__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Button/Button.tsx"),_storybook_DocBlock__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./.storybook/DocBlock.tsx"),src_styles_lakefrontColors__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/styles/lakefrontColors.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Lakefront/RefreshToolbar",component:src_components_RefreshToolbar__WEBPACK_IMPORTED_MODULE_1__.Z,parameters:{docs:{page:_storybook_DocBlock__WEBPACK_IMPORTED_MODULE_3__.Z}}},RefreshToolbar=(args=>{const[count,setCount]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0),[showBanner,setShowBanner]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),refreshToolbarRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{refreshToolbarRef.current&&setShowBanner(!0);const timer=setTimeout((()=>{setShowBanner(!1)}),3e3);return()=>{clearTimeout(timer)}}),[count]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{ref:refreshToolbarRef,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("div",{style:{minHeight:20,backgroundColor:showBanner&&src_styles_lakefrontColors__WEBPACK_IMPORTED_MODULE_4__.Bz,padding:8,margin:"8px 0",textAlign:"center",width:"100%"},children:[showBanner&&count>0&&`Refresh clicked ${count} times.`,showBanner&&0===count&&"Refresh counter reset to 0"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxs)("section",{style:{display:"inline-flex"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(src_components_RefreshToolbar__WEBPACK_IMPORTED_MODULE_1__.Z,{handleRefresh:()=>{setCount((count=>count+1))},className:args.className,standalone:args.standalone,isRefreshing:args.isRefreshing,lastUpdated:args.lastUpdated,refreshProgressLabel:args.refreshProgressLabel,rightComp:args.rightComp,rightSideText:args.rightSideText,refreshButton:args.refreshButton}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__.jsx)(src_components_Button_Button__WEBPACK_IMPORTED_MODULE_2__.Z,{color:"secondary",onClick:()=>{setCount(0)},style:{marginTop:"10px",marginLeft:"10px"},children:"Reset"})]})]})}).bind({});RefreshToolbar.args={isRefreshing:!1,refreshProgressLabel:"Loading...",refreshTooltipText:"Refresh LogSync File Details",lastUpdated:"11:28:22 AM",rightSideText:"Last Updated: 11:28:22 AM EST"};const __namedExportsOrder=["RefreshToolbar"];RefreshToolbar.parameters={...RefreshToolbar.parameters,docs:{...RefreshToolbar.parameters?.docs,source:{originalSource:"args => {\n  const [count, setCount] = useState(0);\n  const [showBanner, setShowBanner] = useState(false);\n  const refreshToolbarRef = useRef(null);\n  const handleRefresh = () => {\n    setCount(count => count + 1);\n  };\n  const resetCount = () => {\n    setCount(0);\n  };\n  useEffect(() => {\n    if (refreshToolbarRef.current) {\n      setShowBanner(true);\n    }\n    const timer = setTimeout(() => {\n      setShowBanner(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [count]);\n  return <div ref={refreshToolbarRef}>\n            <div style={{\n      minHeight: 20,\n      backgroundColor: showBanner && emerald,\n      padding: 8,\n      margin: '8px 0',\n      textAlign: 'center',\n      width: '100%'\n    }}>\n                {showBanner && count > 0 && `Refresh clicked ${count} times.`}\n                {showBanner && count === 0 && `Refresh counter reset to 0`}\n            </div>\n            <section style={{\n      display: 'inline-flex'\n    }}>\n                <RefreshToolbarComponent handleRefresh={handleRefresh} className={args.className} standalone={args.standalone} isRefreshing={args.isRefreshing} lastUpdated={args.lastUpdated} refreshProgressLabel={args.refreshProgressLabel} rightComp={args.rightComp} rightSideText={args.rightSideText} refreshButton={args.refreshButton} />\n                <Button color='secondary' onClick={resetCount} style={{\n        marginTop: '10px',\n        marginLeft: '10px'\n      }}>Reset</Button>\n            </section>\n        </div>;\n}",...RefreshToolbar.parameters?.docs?.source}}}},"./node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);