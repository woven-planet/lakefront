(self.webpackChunk_woven_planet_lakefront=self.webpackChunk_woven_planet_lakefront||[]).push([[9699],{"./node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./.storybook/DocBlock.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const DocBlock=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.fQ,{includePrimary:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.Ed,{})]}),__WEBPACK_DEFAULT_EXPORT__=DocBlock;DocBlock.__docgenInfo={description:"",methods:[],displayName:"DocBlock"}},"./src/stories/BoundingBoxes/BoundingBoxes.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActiveBoxes:()=>ActiveBoxes,BoundingBoxes:()=>BoundingBoxes_stories_BoundingBoxes,__namedExportsOrder:()=>__namedExportsOrder,default:()=>BoundingBoxes_stories});var react=__webpack_require__("./node_modules/react/index.js"),BoundingBoxes=__webpack_require__("./src/components/BoundingBoxes/index.ts"),DocBlock=__webpack_require__("./.storybook/DocBlock.tsx"),lakefrontColors=__webpack_require__("./src/styles/lakefrontColors.ts"),emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js");const ducks_namespaceObject=__webpack_require__.p+"static/media/ducks.d3625a86.jpg";var resizeObserver=__webpack_require__("./src/lib/hooks/resizeObserver.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BOUNDING_BOXES=[{name:"First Duck",items:[{confidence:1,bbox:[[1390,280],[1165,25]]}],color:lakefrontColors.Bz},{name:"Middle Duck",items:[{confidence:1,bbox:[[1620,590],[1395,335]]},{confidence:1,bbox:[[1070,810],[845,555]]}],color:lakefrontColors.VH},{name:"Last Duck",items:[{confidence:1,bbox:[[405,900],[190,645]]}],color:lakefrontColors.km}],StoryContainer=emotion_styled_browser_esm.Z.div({width:"100%",minHeight:320,backgroundColor:"transparent",position:"relative",overflow:"hidden",img:{position:"absolute",top:0,left:0,width:"100%",height:"100.5%",objectFit:"contain"}}),BoundingBoxes_stories={title:"Lakefront/BoundingBoxes",component:BoundingBoxes.ZP,argTypes:{imageWidth:{control:!1},imageHeight:{table:{disable:!0}},outputWidth:{control:!1},outputHeight:{control:!1}},parameters:{docs:{page:DocBlock.Z,source:{code:"\n() => {\n    const [boundingBoxDimensions, setBoundingBoxDimensions] = useState({ width: 1920, height: 1280 });\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [observedElement, setObservedElement] = useState(null);\n    const imageRef = useRef<HTMLImageElement>(null);\n\n    const containerRef = useCallback(\n        (node) => {\n                    if (node) {\n                        const { height, width } = node.getBoundingClientRect();\n                        setBoundingBoxDimensions({ height, width });\n                    }\n        },\n        [imageLoaded, observedElement]  \n    );\n\n    useEffect(() => {\n            if (imageRef.current) {\n                const resizeCallback = (entries) => {\n                    setObservedElement(entries);\n                };\n                \n                const boxResizeObserver = resizeObserver(resizeCallback);\n\n                boxResizeObserver.observe(imageRef.current as HTMLImageElement);\n\n                return () => {\n                    boxResizeObserver.disconnect();\n                };\n            }\n    }, [imageLoaded]);\n\n    const handleImageLoaded = () => {\n        setImageLoaded(true);\n    };\n\n    return (\n        <StoryContainer ref={containerRef}>\n            {imageLoaded && (\n                            <BoundingBoxesComponent\n                    {...boundingBoxesProps}\n                    outputHeight={boundingBoxDimensions.height}\n                    outputWidth={boundingBoxDimensions.width}\n                />\n                            )}\n            <img onLoad={handleImageLoaded} src={imageFile} ref={imageRef} />\n        </StoryContainer>\n    );\n}\n"}}}},Template=args=>{const[boundingBoxDimensions,setBoundingBoxDimensions]=(0,react.useState)({width:1920,height:1280}),[imageLoaded,setImageLoaded]=(0,react.useState)(!1),[observedElement,setObservedElement]=(0,react.useState)(null),imageRef=(0,react.useRef)(null),containerRef=(0,react.useCallback)((node=>{if(node){const{height,width}=node.getBoundingClientRect();setBoundingBoxDimensions({height,width})}}),[imageLoaded,observedElement]);(0,react.useEffect)((()=>{if(imageRef.current){const resizeCallback=entries=>{setObservedElement(entries)},boxResizeObserver=(0,resizeObserver.Z)(resizeCallback);return boxResizeObserver.observe(imageRef.current),()=>{boxResizeObserver.disconnect()}}}),[imageLoaded]);return(0,jsx_runtime.jsxs)(StoryContainer,{ref:containerRef,children:[imageLoaded&&(0,jsx_runtime.jsx)(BoundingBoxes.ZP,{...args,outputHeight:boundingBoxDimensions.height,outputWidth:boundingBoxDimensions.width}),(0,jsx_runtime.jsx)("img",{onLoad:()=>{setImageLoaded(!0)},src:ducks_namespaceObject,ref:imageRef})]})},BoundingBoxes_stories_BoundingBoxes=Template.bind({});BoundingBoxes_stories_BoundingBoxes.args={activeBBox:"",imageHeight:1280,imageWidth:1920,boundingBoxItems:BOUNDING_BOXES};const ActiveBoxes=Template.bind({});ActiveBoxes.args={activeBBox:"Middle Duck",imageHeight:1280,imageWidth:1920,boundingBoxItems:BOUNDING_BOXES};const __namedExportsOrder=["BoundingBoxes","ActiveBoxes"];BoundingBoxes_stories_BoundingBoxes.parameters={...BoundingBoxes_stories_BoundingBoxes.parameters,docs:{...BoundingBoxes_stories_BoundingBoxes.parameters?.docs,source:{originalSource:"args => {\n  const [boundingBoxDimensions, setBoundingBoxDimensions] = useState({\n    width: 1920,\n    height: 1280\n  });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [observedElement, setObservedElement] = useState(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useCallback(node => {\n    if (node) {\n      const {\n        height,\n        width\n      } = node.getBoundingClientRect();\n      setBoundingBoxDimensions({\n        height,\n        width\n      });\n    }\n  }, [imageLoaded, observedElement]);\n  useEffect(() => {\n    if (imageRef.current) {\n      const resizeCallback = entries => {\n        setObservedElement(entries);\n      };\n      const boxResizeObserver = resizeObserver(resizeCallback);\n      boxResizeObserver.observe(imageRef.current as HTMLImageElement);\n      return () => {\n        boxResizeObserver.disconnect();\n      };\n    }\n  }, [imageLoaded]);\n  const handleImageLoaded = () => {\n    setImageLoaded(true);\n  };\n  return <StoryContainer ref={containerRef}>\n            {imageLoaded && <BoundingBoxesComponent {...args} outputHeight={boundingBoxDimensions.height} outputWidth={boundingBoxDimensions.width} />}\n            <img onLoad={handleImageLoaded} src={imageFile} ref={imageRef} />\n        </StoryContainer>;\n}",...BoundingBoxes_stories_BoundingBoxes.parameters?.docs?.source}}},ActiveBoxes.parameters={...ActiveBoxes.parameters,docs:{...ActiveBoxes.parameters?.docs,source:{originalSource:"args => {\n  const [boundingBoxDimensions, setBoundingBoxDimensions] = useState({\n    width: 1920,\n    height: 1280\n  });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [observedElement, setObservedElement] = useState(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useCallback(node => {\n    if (node) {\n      const {\n        height,\n        width\n      } = node.getBoundingClientRect();\n      setBoundingBoxDimensions({\n        height,\n        width\n      });\n    }\n  }, [imageLoaded, observedElement]);\n  useEffect(() => {\n    if (imageRef.current) {\n      const resizeCallback = entries => {\n        setObservedElement(entries);\n      };\n      const boxResizeObserver = resizeObserver(resizeCallback);\n      boxResizeObserver.observe(imageRef.current as HTMLImageElement);\n      return () => {\n        boxResizeObserver.disconnect();\n      };\n    }\n  }, [imageLoaded]);\n  const handleImageLoaded = () => {\n    setImageLoaded(true);\n  };\n  return <StoryContainer ref={containerRef}>\n            {imageLoaded && <BoundingBoxesComponent {...args} outputHeight={boundingBoxDimensions.height} outputWidth={boundingBoxDimensions.width} />}\n            <img onLoad={handleImageLoaded} src={imageFile} ref={imageRef} />\n        </StoryContainer>;\n}",...ActiveBoxes.parameters?.docs?.source}}}},"./node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);