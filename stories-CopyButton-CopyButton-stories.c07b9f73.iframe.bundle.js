"use strict";(self.webpackChunk_woven_planet_lakefront=self.webpackChunk_woven_planet_lakefront||[]).push([[5794],{"./src/stories/CopyButton/CopyButton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CopyButton:()=>CopyButton_stories_CopyButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>CopyButton_stories});var _path,_path2,react=__webpack_require__("./node_modules/react/index.js"),Button=__webpack_require__("./src/components/Button/Button.tsx"),copy=__webpack_require__("./src/lib/util/copy/index.ts");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function SvgFileCopy(props){return react.createElement("svg",_extends({xmlns:"http://www.w3.org/2000/svg",height:24,viewBox:"0 0 24 24",width:24},props),_path||(_path=react.createElement("path",{d:"M0 0h24v24H0z",fill:"none"})),_path2||(_path2=react.createElement("path",{d:"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z"})))}const CopyButtonContent=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js").Z.div((({hasContent})=>({paddingLeft:hasContent?8:0})));var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const CopyButton=({buttonText="Copy",children,disabled,onCopy,valueToCopy,icon,iconOnly=!1,...props})=>(0,jsx_runtime.jsx)(Button.Z,{disabled,onClick:disabled?void 0:()=>{const success=(0,copy.Z)(valueToCopy);onCopy&&success&&onCopy(valueToCopy)},type:"button",...props,icon:icon||(0,jsx_runtime.jsx)(SvgFileCopy,{"aria-label":"File Copy"}),children:!iconOnly&&(0,jsx_runtime.jsx)(CopyButtonContent,{hasContent:Boolean(children||buttonText),className:"copyButtonContent",children:children||buttonText})}),CopyButton_CopyButton=CopyButton;CopyButton.__docgenInfo={description:"CopyButton Component\n\nThe CopyButton component is an implementation of the [Button Component](https://woven-planet.github.io/lakefront/?path=/docs/lakefront-button--all-buttons)\nused specifically for copying provided text to the clipboard. While the default usage should suffice, various aspects can be overridden\ndue to the inheritance of many `ButtonComponentProps`.",methods:[],displayName:"CopyButton",props:{buttonText:{required:!1,tsType:{name:"string"},description:'`Default = "Copy"` The text to display within the button.',defaultValue:{value:"'Copy'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"The classes to pass to the bounding boxes container."},disabled:{required:!1,tsType:{name:"boolean"},description:"A boolean that defines whether the anchor should be disabled."},onCopy:{required:!1,tsType:{name:"signature",type:"function",raw:"(scrollToUrl: string) => void",signature:{arguments:[{type:{name:"string"},name:"scrollToUrl"}],return:{name:"void"}}},description:"The action to run on copy success."},valueToCopy:{required:!0,tsType:{name:"string"},description:"The value to be copied to the clipboard."},iconOnly:{required:!1,tsType:{name:"boolean"},description:"This is to set the iconOnly property. If set to false, the icon and text will appear. If true, only copy icon will render.\nBy default, the IconOnly property is set to false.",defaultValue:{value:"false",computed:!1}}}};const components_CopyButton=CopyButton_CopyButton;var buttonUtil=__webpack_require__("./src/components/Button/buttonUtil.tsx"),Input=__webpack_require__("./src/components/Input/Input.tsx"),DocBlock=__webpack_require__("./.storybook/DocBlock.tsx"),lakefrontColors=__webpack_require__("./src/styles/lakefrontColors.ts");const CopyButton_stories={title:"Lakefront/CopyButton",component:components_CopyButton,argTypes:{as:{control:{type:"select",options:["a","button","div","span"]}},children:{name:"text (children)",description:"Usually text, but can accept other elements. If an icon is needed, use the icon prop."},color:{control:{type:"select",options:[buttonUtil.DM.PRIMARY,buttonUtil.DM.SECONDARY,buttonUtil.DM.DESTRUCTIVE]}},disabled:{control:"boolean",table:{defaultValue:{summary:!1},type:{summary:"boolean"}},description:"HTML button element disabled prop."},icon:{table:{disable:!0}},onCopy:{table:{disable:!0}}},parameters:{docs:{page:DocBlock.Z}}},CopyButton_stories_CopyButton=(args=>{const[copyText,setCopyText]=(0,react.useState)("Text to copy"),[copied,setCopied]=(0,react.useState)("");return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("p",{children:"Modify text below and click the button to copy it."}),(0,jsx_runtime.jsx)(components_CopyButton,{...args,valueToCopy:args.valueToCopy||copyText,disabled:args.disabled||!copyText,onCopy:copiedText=>{setCopied(`Copied "${copiedText}"`)}}),(0,jsx_runtime.jsx)(Input.Z,{value:args.valueToCopy||copyText,onChange:({target:{value}})=>{setCopied(""),setCopyText(value)},style:{marginTop:8}}),(0,jsx_runtime.jsxs)("div",{style:{color:lakefrontColors.ek,minHeight:24},children:[copied,(0,jsx_runtime.jsx)("span",{style:{color:lakefrontColors.Zi,minHeight:24},children:!copyText&&"Copying is disabled due to empty input."})]})]})}).bind({}),__namedExportsOrder=["CopyButton"];CopyButton_stories_CopyButton.parameters={...CopyButton_stories_CopyButton.parameters,docs:{...CopyButton_stories_CopyButton.parameters?.docs,source:{originalSource:"args => {\n  const [copyText, setCopyText] = useState('Text to copy');\n  const [copied, setCopied] = useState('');\n  const handleChange = ({\n    target: {\n      value\n    }\n  }) => {\n    setCopied('');\n    setCopyText(value);\n  };\n  const handleCopy = (copiedText: string) => {\n    setCopied(`Copied \"${copiedText}\"`);\n  };\n  return <div>\n            <p>Modify text below and click the button to copy it.</p>\n            <CopyButtonComponent {...args} valueToCopy={args.valueToCopy || copyText} disabled={args.disabled || !copyText} onCopy={handleCopy} />\n            <Input value={args.valueToCopy || copyText} onChange={handleChange} style={{\n      marginTop: 8\n    }} />\n            <div style={{\n      color: green,\n      minHeight: 24\n    }}>\n                {copied}\n                <span style={{\n        color: saturatedRed,\n        minHeight: 24\n      }}>\n                    {!copyText && 'Copying is disabled due to empty input.'}\n                </span>\n            </div>\n        </div>;\n}",...CopyButton_stories_CopyButton.parameters?.docs?.source}}}}}]);