"use strict";(self.webpackChunk_woven_planet_lakefront=self.webpackChunk_woven_planet_lakefront||[]).push([[9699],{"./.storybook/DocBlock.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js");const DocBlock=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.fQ,{includePrimary:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Ed,{})]}),__WEBPACK_DEFAULT_EXPORT__=DocBlock;try{DocBlock.displayName="DocBlock",DocBlock.__docgenInfo={description:"",displayName:"DocBlock",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[".storybook/DocBlock.tsx#DocBlock"]={docgenInfo:DocBlock.__docgenInfo,name:"DocBlock",path:".storybook/DocBlock.tsx#DocBlock"})}catch(__react_docgen_typescript_loader_error){}},"./src/stories/BoundingBoxes/BoundingBoxes.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActiveBoxes:()=>ActiveBoxes,BoundingBoxes:()=>BoundingBoxes_stories_BoundingBoxes,__namedExportsOrder:()=>__namedExportsOrder,default:()=>BoundingBoxes_stories});var react=__webpack_require__("./node_modules/react/index.js"),BoundingBoxes=__webpack_require__("./src/components/BoundingBoxes/index.ts"),DocBlock=__webpack_require__("./.storybook/DocBlock.tsx"),lakefrontColors=__webpack_require__("./src/styles/lakefrontColors.ts"),emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js");const ducks_namespaceObject=__webpack_require__.p+"static/media/ducks.d3625a86.jpg";var resizeObserver=__webpack_require__("./src/lib/hooks/resizeObserver.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BOUNDING_BOXES=[{name:"First Duck",items:[{confidence:1,bbox:[[1390,280],[1165,25]]}],color:lakefrontColors.Bz},{name:"Middle Duck",items:[{confidence:1,bbox:[[1620,590],[1395,335]]},{confidence:1,bbox:[[1070,810],[845,555]]}],color:lakefrontColors.VH},{name:"Last Duck",items:[{confidence:1,bbox:[[405,900],[190,645]]}],color:lakefrontColors.km}],StoryContainer=emotion_styled_browser_esm.Z.div({width:"100%",minHeight:320,backgroundColor:"transparent",position:"relative",overflow:"hidden",img:{position:"absolute",top:0,left:0,width:"100%",height:"100.5%",objectFit:"contain"}}),BoundingBoxes_stories={title:"Lakefront/BoundingBoxes",component:BoundingBoxes.ZP,argTypes:{imageWidth:{control:!1},imageHeight:{table:{disable:!0}},outputWidth:{control:!1},outputHeight:{control:!1}},parameters:{docs:{page:DocBlock.Z,source:{code:"\n() => {\n    const [boundingBoxDimensions, setBoundingBoxDimensions] = useState({ width: 1920, height: 1280 });\n    const [imageLoaded, setImageLoaded] = useState(false);\n    const [observedElement, setObservedElement] = useState(null);\n    const imageRef = useRef<HTMLImageElement>(null);\n\n    const containerRef = useCallback(\n        (node) => {\n                    if (node) {\n                        const { height, width } = node.getBoundingClientRect();\n                        setBoundingBoxDimensions({ height, width });\n                    }\n        },\n        [imageLoaded, observedElement]  \n    );\n\n    useEffect(() => {\n            if (imageRef.current) {\n                const resizeCallback = (entries) => {\n                    setObservedElement(entries);\n                };\n                \n                const boxResizeObserver = resizeObserver(resizeCallback);\n\n                boxResizeObserver.observe(imageRef.current as HTMLImageElement);\n\n                return () => {\n                    boxResizeObserver.disconnect();\n                };\n            }\n    }, [imageLoaded]);\n\n    const handleImageLoaded = () => {\n        setImageLoaded(true);\n    };\n\n    return (\n        <StoryContainer ref={containerRef}>\n            {imageLoaded && (\n                            <BoundingBoxesComponent\n                    {...boundingBoxesProps}\n                    outputHeight={boundingBoxDimensions.height}\n                    outputWidth={boundingBoxDimensions.width}\n                />\n                            )}\n            <img onLoad={handleImageLoaded} src={imageFile} ref={imageRef} />\n        </StoryContainer>\n    );\n}\n"}}}},Template=args=>{const[boundingBoxDimensions,setBoundingBoxDimensions]=(0,react.useState)({width:1920,height:1280}),[imageLoaded,setImageLoaded]=(0,react.useState)(!1),[observedElement,setObservedElement]=(0,react.useState)(null),imageRef=(0,react.useRef)(null),containerRef=(0,react.useCallback)((node=>{if(node){const{height,width}=node.getBoundingClientRect();setBoundingBoxDimensions({height,width})}}),[imageLoaded,observedElement]);(0,react.useEffect)((()=>{if(imageRef.current){const resizeCallback=entries=>{setObservedElement(entries)},boxResizeObserver=(0,resizeObserver.Z)(resizeCallback);return boxResizeObserver.observe(imageRef.current),()=>{boxResizeObserver.disconnect()}}}),[imageLoaded]);return(0,jsx_runtime.jsxs)(StoryContainer,{ref:containerRef,children:[imageLoaded&&(0,jsx_runtime.jsx)(BoundingBoxes.ZP,{...args,outputHeight:boundingBoxDimensions.height,outputWidth:boundingBoxDimensions.width}),(0,jsx_runtime.jsx)("img",{onLoad:()=>{setImageLoaded(!0)},src:ducks_namespaceObject,ref:imageRef})]})};Template.displayName="Template";const BoundingBoxes_stories_BoundingBoxes=Template.bind({});BoundingBoxes_stories_BoundingBoxes.args={activeBBox:"",imageHeight:1280,imageWidth:1920,boundingBoxItems:BOUNDING_BOXES};const ActiveBoxes=Template.bind({});ActiveBoxes.args={activeBBox:"Middle Duck",imageHeight:1280,imageWidth:1920,boundingBoxItems:BOUNDING_BOXES},BoundingBoxes_stories_BoundingBoxes.parameters={...BoundingBoxes_stories_BoundingBoxes.parameters,docs:{...BoundingBoxes_stories_BoundingBoxes.parameters?.docs,source:{originalSource:"args => {\n  const [boundingBoxDimensions, setBoundingBoxDimensions] = useState({\n    width: 1920,\n    height: 1280\n  });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [observedElement, setObservedElement] = useState(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useCallback(node => {\n    if (node) {\n      const {\n        height,\n        width\n      } = node.getBoundingClientRect();\n      setBoundingBoxDimensions({\n        height,\n        width\n      });\n    }\n  }, [imageLoaded, observedElement]);\n  useEffect(() => {\n    if (imageRef.current) {\n      const resizeCallback = entries => {\n        setObservedElement(entries);\n      };\n      const boxResizeObserver = resizeObserver(resizeCallback);\n      boxResizeObserver.observe((imageRef.current as HTMLImageElement));\n      return () => {\n        boxResizeObserver.disconnect();\n      };\n    }\n  }, [imageLoaded]);\n  const handleImageLoaded = () => {\n    setImageLoaded(true);\n  };\n  return <StoryContainer ref={containerRef}>\n            {imageLoaded && <BoundingBoxesComponent {...args} outputHeight={boundingBoxDimensions.height} outputWidth={boundingBoxDimensions.width} />}\n            <img onLoad={handleImageLoaded} src={imageFile} ref={imageRef} />\n        </StoryContainer>;\n}",...BoundingBoxes_stories_BoundingBoxes.parameters?.docs?.source}}},ActiveBoxes.parameters={...ActiveBoxes.parameters,docs:{...ActiveBoxes.parameters?.docs,source:{originalSource:"args => {\n  const [boundingBoxDimensions, setBoundingBoxDimensions] = useState({\n    width: 1920,\n    height: 1280\n  });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [observedElement, setObservedElement] = useState(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n  const containerRef = useCallback(node => {\n    if (node) {\n      const {\n        height,\n        width\n      } = node.getBoundingClientRect();\n      setBoundingBoxDimensions({\n        height,\n        width\n      });\n    }\n  }, [imageLoaded, observedElement]);\n  useEffect(() => {\n    if (imageRef.current) {\n      const resizeCallback = entries => {\n        setObservedElement(entries);\n      };\n      const boxResizeObserver = resizeObserver(resizeCallback);\n      boxResizeObserver.observe((imageRef.current as HTMLImageElement));\n      return () => {\n        boxResizeObserver.disconnect();\n      };\n    }\n  }, [imageLoaded]);\n  const handleImageLoaded = () => {\n    setImageLoaded(true);\n  };\n  return <StoryContainer ref={containerRef}>\n            {imageLoaded && <BoundingBoxesComponent {...args} outputHeight={boundingBoxDimensions.height} outputWidth={boundingBoxDimensions.width} />}\n            <img onLoad={handleImageLoaded} src={imageFile} ref={imageRef} />\n        </StoryContainer>;\n}",...ActiveBoxes.parameters?.docs?.source}}};const __namedExportsOrder=["BoundingBoxes","ActiveBoxes"]},"./src/components/BoundingBoxes/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ZP:()=>components_BoundingBoxes});var react=__webpack_require__("./node_modules/react/index.js");const BoundingBoxesContainer=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js").Z.canvas({position:"absolute",top:0,left:0,zIndex:1}),drawSingleBox=(ctx,bboxItem)=>{const{color,items,name}=bboxItem;ctx.strokeStyle=color,ctx.lineWidth=3,items.forEach((item=>{const bbox=item.bbox,leftX=bbox[0][0],topY=bbox[0][1],width=bbox[1][0]-bbox[0][0],height=bbox[1][1]-bbox[0][1];ctx.strokeRect(leftX,topY,width,height),ctx.font="bold 36px sans-serif",ctx.fillStyle=color,ctx.fillText(name,leftX,topY-10)}))},getImageOffsetRatio=(imageWidth,imageHeight,outputWidth,outputHeight)=>{if(0!==imageWidth&&0!==outputWidth){const imageRatio=imageWidth/imageHeight,outputRatio=outputWidth/outputHeight;if(imageRatio<outputRatio){const desiredWidth=imageRatio*outputHeight;return{left:Math.abs(outputWidth-desiredWidth)/2,top:0,ratio:1/(imageHeight/outputHeight)}}if(imageRatio>outputRatio){const desiredHeight=outputWidth/imageRatio;return{left:0,top:Math.abs(outputHeight-desiredHeight)/2,ratio:1/(imageWidth/outputWidth)}}}return{left:0,top:0,ratio:1}};try{drawSingleBox.displayName="drawSingleBox",drawSingleBox.__docgenInfo={description:"Draws a single bounding box given a 2D canvas rendering context and the bounding box item.",displayName:"drawSingleBox",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/BoundingBoxes/boundingBoxesUtil.tsx#drawSingleBox"]={docgenInfo:drawSingleBox.__docgenInfo,name:"drawSingleBox",path:"src/components/BoundingBoxes/boundingBoxesUtil.tsx#drawSingleBox"})}catch(__react_docgen_typescript_loader_error){}try{getImageOffsetRatio.displayName="getImageOffsetRatio",getImageOffsetRatio.__docgenInfo={description:"Get ratio and image offset for scaling the image in a container.",displayName:"getImageOffsetRatio",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/BoundingBoxes/boundingBoxesUtil.tsx#getImageOffsetRatio"]={docgenInfo:getImageOffsetRatio.__docgenInfo,name:"getImageOffsetRatio",path:"src/components/BoundingBoxes/boundingBoxesUtil.tsx#getImageOffsetRatio"})}catch(__react_docgen_typescript_loader_error){}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const BoundingBoxes=({activeBBox,boundingBoxItems,className,imageWidth,imageHeight,outputWidth,outputHeight})=>{const canvasRef=(0,react.useRef)(null);(0,react.useEffect)((()=>{(()=>{const currentCanvas=canvasRef.current;if(!currentCanvas)return;const ctx=currentCanvas.getContext("2d");if(ctx&&(ctx.clearRect(0,0,currentCanvas.width,currentCanvas.height),boundingBoxItems.length>0))if(""===activeBBox)boundingBoxItems.forEach((bboxItem=>{drawSingleBox(ctx,bboxItem)}));else{const activeItem=boundingBoxItems.find((item=>item.name===activeBBox));activeItem&&drawSingleBox(ctx,activeItem)}})()}),[activeBBox,boundingBoxItems]);const offsetRatio=(0,react.useMemo)((()=>getImageOffsetRatio(imageWidth,imageHeight,outputWidth,outputHeight)),[imageWidth,imageHeight,outputWidth,outputHeight]);return(0,jsx_runtime.jsx)(BoundingBoxesContainer,{style:{left:offsetRatio.left,top:offsetRatio.top,transform:`scale(${offsetRatio.ratio})`,WebkitTransformOrigin:"top left"},className,width:imageWidth,height:imageHeight,ref:canvasRef})};BoundingBoxes.displayName="BoundingBoxes";const BoundingBoxes_BoundingBoxes=BoundingBoxes;try{BoundingBoxes.displayName="BoundingBoxes",BoundingBoxes.__docgenInfo={description:"BoundingBoxes Component\n\nThe BoundingBoxes component is intended to draw boxes on top of specified areas\nof an image. This can be used to direct attention to key aspects or items within an image\nwhile also maintaining the proper aspect ratio and location offset(s) as the image is resized.",displayName:"BoundingBoxes",props:{activeBBox:{defaultValue:null,description:"The name of the currently active item. When specified, only\nbounding boxes included in the first item with the matching name will be drawn.",name:"activeBBox",required:!0,type:{name:"string"}},boundingBoxItems:{defaultValue:null,description:"A list of bounding box items to draw including the name of the item,\nthe color of the boxes, and a list of bounding boxes to draw.",name:"boundingBoxItems",required:!0,type:{name:"BoundingBoxItemProp[]"}},className:{defaultValue:null,description:"The classes to pass to the bounding boxes container.",name:"className",required:!1,type:{name:"string"}},imageWidth:{defaultValue:null,description:"The width of the image.",name:"imageWidth",required:!0,type:{name:"number"}},imageHeight:{defaultValue:null,description:"The height of the image.",name:"imageHeight",required:!0,type:{name:"number"}},outputWidth:{defaultValue:null,description:"The desired width to display the image. This will likely be observed in the\nparent component, changing often to allow the image to resize.",name:"outputWidth",required:!0,type:{name:"number"}},outputHeight:{defaultValue:null,description:"The desired height to display the image. This will likely be observed in the\nparent component, changing often to allow the image to resize.",name:"outputHeight",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/BoundingBoxes/BoundingBoxes.tsx#BoundingBoxes"]={docgenInfo:BoundingBoxes.__docgenInfo,name:"BoundingBoxes",path:"src/components/BoundingBoxes/BoundingBoxes.tsx#BoundingBoxes"})}catch(__react_docgen_typescript_loader_error){}const components_BoundingBoxes=BoundingBoxes_BoundingBoxes},"./src/lib/hooks/resizeObserver.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=callback=>new ResizeObserver(callback)}}]);