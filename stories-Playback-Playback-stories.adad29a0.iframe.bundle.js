(self.webpackChunk_woven_planet_lakefront=self.webpackChunk_woven_planet_lakefront||[]).push([[753],{"./node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./.storybook/DocBlock.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const DocBlock=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.Dx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.QE,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.dk,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.fQ,{includePrimary:!0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_0__.Ed,{})]}),__WEBPACK_DEFAULT_EXPORT__=DocBlock;DocBlock.__docgenInfo={description:"",methods:[],displayName:"DocBlock"}},"./src/stories/Playback/Playback.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{PlaybackBarMultipleHighlights:()=>PlaybackBarMultipleHighlights,PlaybackBarSingleHighlight:()=>PlaybackBarSingleHighlight,PlaybackBarWithPlayback:()=>PlaybackBarWithPlayback,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Playback_stories});var react=__webpack_require__("./node_modules/react/index.js");const getPercentage=(current,max)=>100*current/max,getLeft=percentage=>`calc(${percentage}% - 7px)`;var emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js");const PlaybackStyle=emotion_styled_browser_esm.Z.div({boxSizing:"border-box",textAlign:"center"}),PlaySlider=emotion_styled_browser_esm.Z.div((({theme})=>({fontSize:"12px",color:theme?.colors?.white,display:"grid",gridTemplateColumns:"100px auto 100px",gridRowGap:"0.5rem"}))),Highlight=emotion_styled_browser_esm.Z.div((({theme,left,width})=>({position:"absolute",borderRadius:"6px",background:theme?.colors?.green,height:"8px",margin:"3px 0",top:0,left,width}))),SliderContainer=emotion_styled_browser_esm.Z.div({position:"relative",height:"14px"}),SliderBar=emotion_styled_browser_esm.Z.div((({theme})=>({position:"relative",borderRadius:"6px",background:theme?.colors?.dolphin,height:"8px",margin:"3px 0"}))),SliderStyle=emotion_styled_browser_esm.Z.div({position:"absolute",top:0,left:0,background:"transparent",height:"14px",width:"100%"}),ThumbStyle=emotion_styled_browser_esm.Z.div((({theme,left})=>({width:"14px",height:"14px",borderRadius:"50%",position:"absolute",top:0,background:theme?.colors?.mercury,cursor:"grab",left})));var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const HighlightSections=({highlights,max})=>(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:highlights&&highlights.map((highlight=>{const start=getPercentage(highlight.start,max),left=`${start}%`,width=getPercentage(highlight.end,max)-start+"%";return(0,jsx_runtime.jsx)(Highlight,{left,width,"data-testid":"highlight"},highlight.start)}))}),PlaybackBar_HighlightSections=HighlightSections;HighlightSections.__docgenInfo={description:"",methods:[],displayName:"HighlightSections",props:{highlights:{required:!0,tsType:{name:"Array",elements:[{name:"HighlightsProp"}],raw:"HighlightsProp[]"},description:""},max:{required:!0,tsType:{name:"number"},description:""}}};const Slider=({value,max,highlights,onChange})=>{const initialPercentage=getPercentage(value,max),range=(0,react.useMemo)((()=>{let minRange=0,maxRange=max;return highlights&&highlights.length>0&&highlights[0].playback&&(minRange=highlights[0].start,maxRange=highlights[0].end),{min:minRange,max:maxRange}}),[max,highlights]),sliderRef=(0,react.useRef)(null),thumbRef=(0,react.useRef)(null),mouseMoveHandler=(0,react.useRef)((()=>{})),triggerThumbMove=xPos=>{if(sliderRef.current&&thumbRef.current){let newX=xPos;const sliderWidth=sliderRef.current.offsetWidth-thumbRef.current.offsetWidth,start=Math.round(range.min/max*sliderWidth),end=Math.round(range.max/max*sliderWidth);newX<start&&(newX=start),newX>end&&(newX=end);const newPercentage=getPercentage(newX,sliderWidth),newValue=((percentage,max)=>Math.round(max/100*percentage))(newPercentage,max);thumbRef.current.style.left=getLeft(newPercentage),value!==newValue&&onChange(newValue)}},handleMouseUp=()=>{thumbRef.current&&(thumbRef.current.style.cursor="grab"),document.removeEventListener("mouseup",handleMouseUp),document.removeEventListener("mousemove",mouseMoveHandler.current)},handleMouseMove=event=>{if(sliderRef.current&&thumbRef.current){const xPos=event.clientX-sliderRef.current.getBoundingClientRect().left;thumbRef.current.style.cursor="grabbing",triggerThumbMove(xPos)}};return(0,jsx_runtime.jsxs)(SliderContainer,{children:[(0,jsx_runtime.jsx)(SliderBar,{}),(0,jsx_runtime.jsx)(PlaybackBar_HighlightSections,{highlights,max}),(0,jsx_runtime.jsx)(SliderStyle,{ref:sliderRef,onClick:event=>{if(sliderRef.current){const xPos=event.clientX-sliderRef.current.getBoundingClientRect().left;triggerThumbMove(xPos)}},"data-testid":"slider"}),(0,jsx_runtime.jsx)(ThumbStyle,{ref:thumbRef,onMouseDown:()=>{mouseMoveHandler.current=((delay,fn)=>{let lastCall=0;return function(...args){const now=(new Date).getTime();if(!(now-lastCall<delay))return lastCall=now,fn(...args)}})(100,handleMouseMove),document.addEventListener("mousemove",mouseMoveHandler.current),document.addEventListener("mouseup",handleMouseUp)},left:getLeft(initialPercentage),"data-testid":"thumb"})]})},PlaybackBar_Slider=Slider;Slider.__docgenInfo={description:"",methods:[],displayName:"Slider",props:{value:{required:!0,tsType:{name:"number"},description:""},max:{required:!0,tsType:{name:"number"},description:""},highlights:{required:!0,tsType:{name:"Array",elements:[{name:"HighlightsProp"}],raw:"HighlightsProp[]"},description:""}}};var emotion_element_6a883da9_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-element-6a883da9.browser.esm.js"),theme=__webpack_require__("./src/styles/theme.ts");const PlaybackBar=({currentDuration,currentSlider,endDuration,highlights,maxSlider,setSlider,className})=>(0,jsx_runtime.jsx)(emotion_element_6a883da9_browser_esm.a,{theme:theme.Z,children:(0,jsx_runtime.jsx)(PlaybackStyle,{className,children:(0,jsx_runtime.jsxs)(PlaySlider,{children:[(0,jsx_runtime.jsx)("span",{children:currentDuration}),(0,jsx_runtime.jsx)(PlaybackBar_Slider,{value:currentSlider,max:maxSlider,highlights,onChange:setSlider}),(0,jsx_runtime.jsx)("span",{children:endDuration})]})})}),Playbackbar=PlaybackBar;PlaybackBar.__docgenInfo={description:"The Playback Component renders a slider.\n The highlights property is an array and each item in an array has start,end and playback.\n The Playback component is highlighted depending on the start and end value.\n You can have multiple highlights in one single playback component.\n The slider can be moved between the start point and the end point depending upon the playback property.\n The playback property determines whether the slider can be moved freely or whether it is constrained to the highlighted areas.",methods:[],displayName:"PlaybackBar",props:{currentDuration:{required:!0,tsType:{name:"string"},description:"This is to display the current duration of the playback component."},endDuration:{required:!0,tsType:{name:"string"},description:"This is to display the end duration of the playback component."},currentSlider:{required:!0,tsType:{name:"number"},description:"This is to set the slider position on initial render of the playback component."},maxSlider:{required:!0,tsType:{name:"number"},description:"This is to set the max value of the playback component."},highlights:{required:!0,tsType:{name:"Array",elements:[{name:"HighlightsProp"}],raw:"HighlightsProp[]"},description:"This is to highlight a particular section of the playback component in green."},className:{required:!1,tsType:{name:"string"},description:"The classes to pass to the playback bar."}}};const components_PlaybackBar=Playbackbar;var DocBlock=__webpack_require__("./.storybook/DocBlock.tsx"),lakefrontColors=__webpack_require__("./src/styles/lakefrontColors.ts");const Playback_stories={title:"Lakefront/PlaybackBar",component:components_PlaybackBar,argTypes:{children:{table:{disable:!0}},className:{type:"string"}},parameters:{docs:{page:DocBlock.Z}}},Template=args=>{const[index,setIndex]=(0,react.useState)(0),[showBanner,setShowBanner]=(0,react.useState)(!1),playBackRef=(0,react.useRef)(null);return(0,react.useEffect)((()=>{playBackRef.current&&setShowBanner(!0);const timer=setTimeout((()=>{setShowBanner(!1)}),3e3);return()=>{clearTimeout(timer)}}),[index]),(0,jsx_runtime.jsxs)("div",{ref:playBackRef,children:[(0,jsx_runtime.jsx)("div",{style:{minHeight:20,backgroundColor:showBanner&&lakefrontColors.Bz,padding:8,margin:"8px 0",textAlign:"center",width:"100%"},children:showBanner&&`Playback is set to index ${index}`}),(0,jsx_runtime.jsx)(components_PlaybackBar,{currentDuration:args.currentDuration,currentSlider:args.currentSlider,endDuration:args.endDuration,highlights:args.highlights,maxSlider:args.maxSlider,setSlider:index=>{setIndex(index)}}),args.highlights.map((highlight=>(0,jsx_runtime.jsxs)("div",{style:{textAlign:"center"},children:[(0,jsx_runtime.jsx)("b",{children:"Start Index:"}),(0,jsx_runtime.jsxs)("span",{children:[" ",highlight.start]})," ",(0,jsx_runtime.jsx)("b",{children:"End Index:"}),(0,jsx_runtime.jsxs)("span",{children:[" ",highlight.end]})," ",(0,jsx_runtime.jsx)("b",{children:"Playback:"}),(0,jsx_runtime.jsxs)("span",{children:[" ",highlight.playback?"True":"False"]})]})))]})},PlaybackBarSingleHighlight=Template.bind({});PlaybackBarSingleHighlight.args={currentDuration:"00:30",currentSlider:100,endDuration:"05:15",highlights:[{start:50,end:300,playback:!1}],maxSlider:720};const PlaybackBarWithPlayback=Template.bind({});PlaybackBarWithPlayback.args={currentDuration:"00:30",currentSlider:100,endDuration:"05:15",highlights:[{start:50,end:300,playback:!0}],maxSlider:720};const PlaybackBarMultipleHighlights=Template.bind({});PlaybackBarMultipleHighlights.args={currentDuration:"00:30",currentSlider:100,endDuration:"05:15",highlights:[{start:50,end:300,playback:!1},{start:400,end:500,playback:!1}],maxSlider:720};const __namedExportsOrder=["PlaybackBarSingleHighlight","PlaybackBarWithPlayback","PlaybackBarMultipleHighlights"];PlaybackBarSingleHighlight.parameters={...PlaybackBarSingleHighlight.parameters,docs:{...PlaybackBarSingleHighlight.parameters?.docs,source:{originalSource:"args => {\n  const [index, setIndex] = useState(0);\n  const [showBanner, setShowBanner] = useState(false);\n  const playBackRef = useRef(null);\n  const handleSetSlider = (index: number) => {\n    setIndex(index);\n  };\n  useEffect(() => {\n    if (playBackRef.current) {\n      setShowBanner(true);\n    }\n    const timer = setTimeout(() => {\n      setShowBanner(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [index]);\n  return <div ref={playBackRef}>\n            <div style={{\n      minHeight: 20,\n      backgroundColor: showBanner && emerald,\n      padding: 8,\n      margin: '8px 0',\n      textAlign: 'center',\n      width: '100%'\n    }}>\n                {showBanner && `Playback is set to index ${index}`}\n            </div>\n            <PlaybackBarComponent currentDuration={args.currentDuration} currentSlider={args.currentSlider} endDuration={args.endDuration} highlights={args.highlights} maxSlider={args.maxSlider} setSlider={handleSetSlider}>\n            </PlaybackBarComponent>\n            {args.highlights.map(highlight => {\n      return <div style={{\n        textAlign: 'center'\n      }}>\n                    <b>Start Index:</b><span> {highlight.start}</span>&nbsp;\n                    <b>End Index:</b><span> {highlight.end}</span>&nbsp;\n                    <b>Playback:</b><span> {highlight.playback ? \"True\" : \"False\"}</span>\n                </div>;\n    })}\n        </div>;\n}",...PlaybackBarSingleHighlight.parameters?.docs?.source}}},PlaybackBarWithPlayback.parameters={...PlaybackBarWithPlayback.parameters,docs:{...PlaybackBarWithPlayback.parameters?.docs,source:{originalSource:"args => {\n  const [index, setIndex] = useState(0);\n  const [showBanner, setShowBanner] = useState(false);\n  const playBackRef = useRef(null);\n  const handleSetSlider = (index: number) => {\n    setIndex(index);\n  };\n  useEffect(() => {\n    if (playBackRef.current) {\n      setShowBanner(true);\n    }\n    const timer = setTimeout(() => {\n      setShowBanner(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [index]);\n  return <div ref={playBackRef}>\n            <div style={{\n      minHeight: 20,\n      backgroundColor: showBanner && emerald,\n      padding: 8,\n      margin: '8px 0',\n      textAlign: 'center',\n      width: '100%'\n    }}>\n                {showBanner && `Playback is set to index ${index}`}\n            </div>\n            <PlaybackBarComponent currentDuration={args.currentDuration} currentSlider={args.currentSlider} endDuration={args.endDuration} highlights={args.highlights} maxSlider={args.maxSlider} setSlider={handleSetSlider}>\n            </PlaybackBarComponent>\n            {args.highlights.map(highlight => {\n      return <div style={{\n        textAlign: 'center'\n      }}>\n                    <b>Start Index:</b><span> {highlight.start}</span>&nbsp;\n                    <b>End Index:</b><span> {highlight.end}</span>&nbsp;\n                    <b>Playback:</b><span> {highlight.playback ? \"True\" : \"False\"}</span>\n                </div>;\n    })}\n        </div>;\n}",...PlaybackBarWithPlayback.parameters?.docs?.source}}},PlaybackBarMultipleHighlights.parameters={...PlaybackBarMultipleHighlights.parameters,docs:{...PlaybackBarMultipleHighlights.parameters?.docs,source:{originalSource:"args => {\n  const [index, setIndex] = useState(0);\n  const [showBanner, setShowBanner] = useState(false);\n  const playBackRef = useRef(null);\n  const handleSetSlider = (index: number) => {\n    setIndex(index);\n  };\n  useEffect(() => {\n    if (playBackRef.current) {\n      setShowBanner(true);\n    }\n    const timer = setTimeout(() => {\n      setShowBanner(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [index]);\n  return <div ref={playBackRef}>\n            <div style={{\n      minHeight: 20,\n      backgroundColor: showBanner && emerald,\n      padding: 8,\n      margin: '8px 0',\n      textAlign: 'center',\n      width: '100%'\n    }}>\n                {showBanner && `Playback is set to index ${index}`}\n            </div>\n            <PlaybackBarComponent currentDuration={args.currentDuration} currentSlider={args.currentSlider} endDuration={args.endDuration} highlights={args.highlights} maxSlider={args.maxSlider} setSlider={handleSetSlider}>\n            </PlaybackBarComponent>\n            {args.highlights.map(highlight => {\n      return <div style={{\n        textAlign: 'center'\n      }}>\n                    <b>Start Index:</b><span> {highlight.start}</span>&nbsp;\n                    <b>End Index:</b><span> {highlight.end}</span>&nbsp;\n                    <b>Playback:</b><span> {highlight.playback ? \"True\" : \"False\"}</span>\n                </div>;\n    })}\n        </div>;\n}",...PlaybackBarMultipleHighlights.parameters?.docs?.source}}}},"./node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext}}]);