"use strict";(self.webpackChunk_woven_planet_lakefront=self.webpackChunk_woven_planet_lakefront||[]).push([[1164],{"./src/stories/Filter/filterStoriesUtil.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{M:()=>createFilterSourceCode});const createFilterSourceCode=filtersObjectString=>`\nconst FILTERS = ${filtersObjectString};\n\nconst filterHooks = useFilter(FILTERS, true, {}, () => null);\n\nreturn (\n    <Filter filterHooks={filterHooks}>\n        Page Body\n  </Filter>\n);\n`},"./src/stories/Filter/MultiSelectFilter/MultiSelectFilter.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DelimiterParsing:()=>DelimiterParsing,MultiSelectFilter:()=>MultiSelectFilter,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MultiSelectFilter_stories});var FilterPage=__webpack_require__("./src/stories/Filter/components/FilterPage/index.ts");const MULTI_SELECT_FILTER_SOURCE_CODE=(0,__webpack_require__("./src/stories/Filter/filterStoriesUtil.ts").M)("{\n    multiSelectFilter: MultiSelectFilter(\n        {\n            label: 'Multi Select Filter',\n            creatable: true,\n            initialValue = ['colors'],\n            options: [\n                { label: 'Colors', value: 'colors' },\n                ...additionalSelectOptions\n            ],\n            description: 'MultiSelectFilter is a select dropdown control meant to multi select a value.'\n        },\n        {\n            getDefaultFilterValue: () => ['colors']\n            ...additionalMultiSelectFilterOptions\n        }\n    )\n}"),MultiSelectFilter_MultiSelectFilterDocs=()=>null;var DocBlock=__webpack_require__("./.storybook/DocBlock.tsx"),modules=__webpack_require__("./src/components/Filter/modules/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const MultiSelectFilter_stories={title:"Lakefront/Filter/MultiSelectFilter",component:MultiSelectFilter_MultiSelectFilterDocs,argTypes:{multiSelectFilterProps:{control:{type:"object"},description:"The props required to be supplied as the first argument of the MultiSelectFilter component. If the *optional* `delimiter` prop is provided, input parsing will be enabled to allow typing/pasting multiple values seperated by the chosen delimiter."},multiSelectFilterOptions:{control:!1,description:"Any valid `FilterModule` property (excluding description and label) which will override default multi select filter behaviour."}},parameters:{docs:{page:DocBlock.Z,source:{code:MULTI_SELECT_FILTER_SOURCE_CODE}}}},MultiSelectFilterTemplate=args=>{const pageFilters={multiSelectFilter:(0,modules.J)(args.multiSelectFilterProps,{})};return(0,jsx_runtime.jsx)(FilterPage.ZP,{pageFilters})},MultiSelectFilter=MultiSelectFilterTemplate.bind({});MultiSelectFilter.args={multiSelectFilterProps:{label:"Multi Select Filter",creatable:!0,initialValue:["colors"],options:FilterPage.CJ,description:"MultiSelectFilter is a select dropdown control meant to multi select a value."}};const DelimiterParsing=MultiSelectFilterTemplate.bind({});DelimiterParsing.args={multiSelectFilterProps:{label:"Delimiter Parsing",creatable:!0,options:FilterPage.CJ,description:'Delimiter Parsing allows pasting in multiple values seperated\nby a chosen delimiter. The "\\n" (e.g. new line) has been set as the delimiter here by default.',delimiter:"\n"}};const __namedExportsOrder=["MultiSelectFilter","DelimiterParsing"];MultiSelectFilter.parameters={...MultiSelectFilter.parameters,docs:{...MultiSelectFilter.parameters?.docs,source:{originalSource:"(args: MultiSelectFilterArgs) => {\n  const pageFilters = {\n    multiSelectFilter: MultiSelectFilterFunction(args.multiSelectFilterProps, {})\n  };\n  return <FilterPage pageFilters={pageFilters} />;\n}",...MultiSelectFilter.parameters?.docs?.source}}},DelimiterParsing.parameters={...DelimiterParsing.parameters,docs:{...DelimiterParsing.parameters?.docs,source:{originalSource:"(args: MultiSelectFilterArgs) => {\n  const pageFilters = {\n    multiSelectFilter: MultiSelectFilterFunction(args.multiSelectFilterProps, {})\n  };\n  return <FilterPage pageFilters={pageFilters} />;\n}",...DelimiterParsing.parameters?.docs?.source}}}}}]);